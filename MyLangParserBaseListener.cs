//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MyLangParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMyLangParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MyLangParserBaseListener : IMyLangParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] MyLangParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] MyLangParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] MyLangParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] MyLangParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] MyLangParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] MyLangParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] MyLangParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] MyLangParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] MyLangParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] MyLangParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStmt([NotNull] MyLangParser.AssignStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStmt([NotNull] MyLangParser.AssignStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.incStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncStmt([NotNull] MyLangParser.IncStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.incStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncStmt([NotNull] MyLangParser.IncStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.decStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecStmt([NotNull] MyLangParser.DecStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.decStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecStmt([NotNull] MyLangParser.DecStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] MyLangParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] MyLangParser.IfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.whileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStmt([NotNull] MyLangParser.WhileStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.whileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStmt([NotNull] MyLangParser.WhileStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStmt([NotNull] MyLangParser.ForStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStmt([NotNull] MyLangParser.ForStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStmt([NotNull] MyLangParser.PrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStmt([NotNull] MyLangParser.PrintStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStmt([NotNull] MyLangParser.BlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStmt([NotNull] MyLangParser.BlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MulExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulExpr([NotNull] MyLangParser.MulExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MulExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulExpr([NotNull] MyLangParser.MulExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StringExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringExpr([NotNull] MyLangParser.StringExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StringExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringExpr([NotNull] MyLangParser.StringExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DivExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivExpr([NotNull] MyLangParser.DivExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DivExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivExpr([NotNull] MyLangParser.DivExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdExpr([NotNull] MyLangParser.IdExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdExpr([NotNull] MyLangParser.IdExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RelExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelExpr([NotNull] MyLangParser.RelExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RelExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelExpr([NotNull] MyLangParser.RelExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubExpr([NotNull] MyLangParser.SubExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubExpr([NotNull] MyLangParser.SubExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpr([NotNull] MyLangParser.AddExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpr([NotNull] MyLangParser.AddExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IntExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntExpr([NotNull] MyLangParser.IntExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntExpr([NotNull] MyLangParser.IntExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenExpr([NotNull] MyLangParser.ParenExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenExpr([NotNull] MyLangParser.ParenExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RealExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRealExpr([NotNull] MyLangParser.RealExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RealExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRealExpr([NotNull] MyLangParser.RealExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TernaryExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTernaryExpr([NotNull] MyLangParser.TernaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TernaryExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTernaryExpr([NotNull] MyLangParser.TernaryExprContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
