//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MyLangParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMyLangParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MyLangParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MyLangParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] MyLangParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] MyLangParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] MyLangParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] MyLangParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] MyLangParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] MyLangParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] MyLangParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] MyLangParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] MyLangParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] MyLangParser.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.incStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncStmt([NotNull] MyLangParser.IncStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.incStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncStmt([NotNull] MyLangParser.IncStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.decStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecStmt([NotNull] MyLangParser.DecStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.decStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecStmt([NotNull] MyLangParser.DecStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] MyLangParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] MyLangParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] MyLangParser.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] MyLangParser.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStmt([NotNull] MyLangParser.ForStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStmt([NotNull] MyLangParser.ForStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStmt([NotNull] MyLangParser.PrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStmt([NotNull] MyLangParser.PrintStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.blockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStmt([NotNull] MyLangParser.BlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.blockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStmt([NotNull] MyLangParser.BlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MulExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulExpr([NotNull] MyLangParser.MulExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulExpr([NotNull] MyLangParser.MulExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StringExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringExpr([NotNull] MyLangParser.StringExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringExpr([NotNull] MyLangParser.StringExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DivExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivExpr([NotNull] MyLangParser.DivExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DivExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivExpr([NotNull] MyLangParser.DivExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IdExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdExpr([NotNull] MyLangParser.IdExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdExpr([NotNull] MyLangParser.IdExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>RelExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelExpr([NotNull] MyLangParser.RelExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RelExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelExpr([NotNull] MyLangParser.RelExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubExpr([NotNull] MyLangParser.SubExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubExpr([NotNull] MyLangParser.SubExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpr([NotNull] MyLangParser.AddExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpr([NotNull] MyLangParser.AddExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IntExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntExpr([NotNull] MyLangParser.IntExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IntExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntExpr([NotNull] MyLangParser.IntExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenExpr([NotNull] MyLangParser.ParenExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenExpr([NotNull] MyLangParser.ParenExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>RealExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealExpr([NotNull] MyLangParser.RealExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RealExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealExpr([NotNull] MyLangParser.RealExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TernaryExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTernaryExpr([NotNull] MyLangParser.TernaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TernaryExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTernaryExpr([NotNull] MyLangParser.TernaryExprContext context);
}
